--문제풀이 Q4
--JOBS테이블에서 JOB_TITLE 기준으로 정렬하여 직업 조회 ORDER BY 함수
SELECT JOB_TITLE
FROM JOBS
ORDER BY JOB_TITLE
--COUNTRIES 테이블에서 COUNTRY_NAME 기준으로 내림차순으로 정렬하여 조회
SELECT * 
FROM COUNTRIES
ORDER BY country_name DESC;
--EMPLOYEES 테이블에서 SALARY가 10000에서 12000사이인 직원조회
    SELECT FIRST_NAME || ' ' || LAST_NAME
    FROM EMPLOYEES
 WHERE SALARY BETWEEN 10000 AND 12000;
--EMPLOYEES테이블에서 JOB_ID가 'IT_PROG'와 'ST_MAN'인 직원 조회
SELECT *
FROM EMPLOYEES
WHERE JOB_ID IN ('IT_PROG','ST_MAN');
--EMPLOYEES테이블에서 MANAGER_ID가 NULL인 직원 조회
SELECT *
FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;
--DEPARTMENTS 테이블에서 MANAGER_ID가 NULL이 아닌 부서조회
SELECT DEPARTMENT_NAME
FROM DEPARTMENTS
WHERE MANAGER_ID IS NOT NULL;

--EMPLOYEES테이블에서 JOB_ID가 'AD'로 시작하는 직원 조회
SELECT *
FROM employees
WHERE JOB_ID LIKE 'AD%'

--EMPLOYEES 테이블의 FIRST_NAME에서 'ni'를 포함하는 직원조회
SELECT FIRST_NAME || ' ' || LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%ni%'

--LOCATIONS 테이블에서  LOCATION_ID, STREET_ADDRESS, CITY에 대해
--LOCATION_ID가 3000 이하인 데이터와 2000 이상인 데이터를 합집합(중복포함),
--차집합, 교집합 한 결과 조회

SELECT  LOCATION_ID, STREET_ADDRESS, CITY
FROM LOCATION
WHERE LOCATION_ID <=3000;
UNION-- 합집합
SELECT  LOCATION_ID, STREET_ADDRESS, CITY
    FROM LOCATIONS
WHERE LOCATION_ID >=2000;

SELECT  LOCATION_ID, STREET_ADDRESS, CITY
FROM LOCATION
WHERE LOCATION_ID <=3000;
UNION ALL-- 교집합(중복포함) --INSERSECT
SELECT  LOCATION_ID, STREET_ADDRESS, CITY
    FROM LOCATIONS
WHERE LOCATION_ID >=2000;

SELECT  LOCATION_ID, STREET_ADDRESS, CITY
FROM LOCATION
WHERE LOCATION_ID <=3000;
MINUS--차집합
SELECT  LOCATION_ID, STREET_ADDRESS, CITY
    FROM LOCATIONS
WHERE LOCATION_ID >=2000;























